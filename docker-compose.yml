version: '3.8'

services:
  videocall-app:
    build: .
    container_name: videocall-app
    ports:
      - "8080:8080"   # HTTP
      - "8443:8443"   # HTTPS
      - "3000:3000"   # WebSocket
      - "8444:8444"   # Secure WebSocket
    environment:
      - NODE_ENV=production
      - HTTP_PORT=8080
      - HTTPS_PORT=8443
      - WS_PORT=3000
      - WSS_PORT=8444
      - LOG_LEVEL=info
    volumes:
      - ./certs:/app/certs:ro  # Mount SSL certificates
      - ./logs:/app/logs       # Mount logs directory
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - videocall-network

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: videocall-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - videocall-app
    restart: unless-stopped
    networks:
      - videocall-network

networks:
  videocall-network:
    driver: bridge 